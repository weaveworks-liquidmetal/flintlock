"use strict";(self.webpackChunkuserdocs=self.webpackChunkuserdocs||[]).push([[412],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=l(t),m=o,g=u["".concat(c,".").concat(m)]||u[m]||p[m]||a;return t?r.createElement(g,i(i({ref:n},d),{},{components:t})):r.createElement(g,i({ref:n},d))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=u;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},7229:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return d},default:function(){return u}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],s={sidebar_position:2},c="Containerd",l={unversionedId:"getting-started/basics/containerd",id:"getting-started/basics/containerd",isDocsHomePage:!1,title:"Containerd",description:"Install ContainerD.",source:"@site/docs/getting-started/basics/containerd.md",sourceDirName:"getting-started/basics",slug:"/getting-started/basics/containerd",permalink:"/docs/getting-started/basics/containerd",editUrl:"https://github.com/weaveworks/flintlock/edit/main/userdocs/docs/getting-started/basics/containerd.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"gettingStartedSidebar",previous:{title:"Configure network",permalink:"/docs/getting-started/basics/configuring-network"},next:{title:"Set up Firecracker",permalink:"/docs/getting-started/basics/set-up-firecracker"}},d=[{value:"Create thinpool",id:"create-thinpool",children:[],level:2},{value:"Configuration",id:"configuration",children:[],level:2},{value:"Start containerd",id:"start-containerd",children:[],level:2}],p={toc:d};function u(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"containerd"},"Containerd"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/containerd/containerd/releases"},"Install ContainerD"),"."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"RunC is not required; Flintlock uses various containerd services only.")),(0,a.kt)("h2",{id:"create-thinpool"},"Create thinpool"),(0,a.kt)("p",null,"Flintlock relies on containerd's devicemapper snapshotter to provide filesystem\ndevices for Firecracker microvms. Some configuration is required."),(0,a.kt)("p",null,"The easy quick-start option is to run the ",(0,a.kt)("inlineCode",{parentName:"p"},"hack/scripts/devpool.sh")," script as root.\nI know, it's not recommended in general, and I'm happy you think it's not a good\nway to do things, read the comments in the script for details."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt update\nsudo apt install -y dmsetup bc\n\nsudo ./hack/scripts/devpool.sh\n")),(0,a.kt)("p",null,"Verify with ",(0,a.kt)("inlineCode",{parentName:"p"},"sudo dmsetup ls"),"."),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("p",null,"Save this config to ",(0,a.kt)("inlineCode",{parentName:"p"},"/etc/containerd/config-dev.toml"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'version = 2\n\nroot = "/var/lib/containerd-dev"\nstate = "/run/containerd-dev"\n\n[grpc]\n  address = "/run/containerd-dev/containerd.sock"\n\n[metrics]\n  address = "127.0.0.1:1338"\n\n[plugins]\n  [plugins."io.containerd.snapshotter.v1.devmapper"]\n    pool_name = "dev-thinpool"\n    root_path = "/var/lib/containerd-dev/snapshotter/devmapper"\n    base_image_size = "10GB"\n    discard_blocks = true\n\n[debug]\n  level = "trace"\n')),(0,a.kt)("h2",{id:"start-containerd"},"Start containerd"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Just to make sure all the directories are there.\nsudo mkdir -p /var/lib/containerd-dev/snapshotter/devmapper\nsudo mkdir -p /run/containerd-dev/\n\nsudo containerd --config /etc/containerd/config-dev.toml\n")),(0,a.kt)("p",null,"containerd will log about 100 lines at boot, most will be about loading plugins, and we recommended\nscrolling up to ensure that the devmapper plugin loaded successfully."),(0,a.kt)("p",null,"Towards the end you should see ",(0,a.kt)("inlineCode",{parentName:"p"},"containerd successfully booted in 0.055357s"),"."),(0,a.kt)("p",null,"To reach our new dev containerd, we have to specify the ",(0,a.kt)("inlineCode",{parentName:"p"},"--address")," flag,\nfor example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ctr \\\n    --address=/run/containerd-dev/containerd.sock \\\n    --namespace=flintlock \\\n    content ls\n")),(0,a.kt)("p",null,"To make it easier, here is an alias:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'alias ctr-dev="sudo ctr --address=/run/containerd-dev/containerd.sock"\n')))}u.isMDXComponent=!0}}]);