"use strict";(self.webpackChunkuserdocs=self.webpackChunkuserdocs||[]).push([[172],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=l(r),d=i,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||a;return r?n.createElement(f,o(o({ref:t},p),{},{components:r})):n.createElement(f,o({ref:t},p))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var l=2;l<a;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1125:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return u}});var n=r(3117),i=r(102),a=(r(7294),r(3905)),o=["components"],c={},s="Start metrics exporter",l={unversionedId:"getting-started/extras/metrics",id:"getting-started/extras/metrics",title:"Start metrics exporter",description:"Flintlock has a metrics exporter called flintlock-metrics. It listens on an",source:"@site/docs/getting-started/extras/metrics.md",sourceDirName:"getting-started/extras",slug:"/getting-started/extras/metrics",permalink:"/docs/getting-started/extras/metrics",editUrl:"https://github.com/weaveworks/flintlock/edit/main/userdocs/docs/getting-started/extras/metrics.md",tags:[],version:"current",frontMatter:{},sidebar:"gettingStartedSidebar",previous:{title:"Container Image Creation for MicroVM usage",permalink:"/docs/getting-started/extras/image-creation"},next:{title:"Use Vagrant",permalink:"/docs/getting-started/extras/use-vagrant"}},p={},u=[],m={toc:u};function d(e){var t=e.components,r=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"start-metrics-exporter"},"Start metrics exporter"),(0,a.kt)("p",null,"Flintlock has a metrics exporter called ",(0,a.kt)("inlineCode",{parentName:"p"},"flintlock-metrics"),". It listens on an\nHTTP port and serves Prometheus compatible output."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo ./bin/flintlock-metrics serve \\\n  --containerd-socket=/run/containerd-dev/containerd.sock \\\n  --http-endpoint=0.0.0.0:8000\n")),(0,a.kt)("p",null,"Available endpoints:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"/machine/uid/{uid}"),": Metrics for a specific MicroVM."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"/machine/{namespace}/{name}"),": Metrics for all MicroVMs with given name and namespace."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"/machine/{namespace}"),": Metrics for all MicroVMs under a specific Namespace."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"/machine"),": Metrics for all MicroVMs from all Namespaces.")),(0,a.kt)("p",null,"For testing/development, there is a minimal docker compose setup under ",(0,a.kt)("inlineCode",{parentName:"p"},"hack/scripts/monitoring/metrics"),"."))}d.isMDXComponent=!0}}]);