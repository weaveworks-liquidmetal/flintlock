"use strict";(self.webpackChunkuserdocs=self.webpackChunkuserdocs||[]).push([[599],{6601:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return a},default:function(){return d},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return s}});var r=n(3117),o=(n(7294),n(3905));const i={title:"Flintlock"},a=void 0,l={unversionedId:"getting-started/flintlock",id:"getting-started/flintlock",title:"Flintlock",description:"Once you have installed firecracker and started containerd, you can start",source:"@site/docs/getting-started/flintlock.md",sourceDirName:"getting-started",slug:"/getting-started/flintlock",permalink:"/flintlock/docs/getting-started/flintlock",draft:!1,editUrl:"https://github.com/liquidmetal-dev/flintlock/edit/main/userdocs/docs/getting-started/flintlock.md",tags:[],version:"current",frontMatter:{title:"Flintlock"},sidebar:"gettingStartedSidebar",previous:{title:"Firecracker",permalink:"/flintlock/docs/getting-started/firecracker"},next:{title:"Using the service",permalink:"/flintlock/docs/getting-started/usage"}},c={},s=[],u={toc:s};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Once you have installed ",(0,o.kt)("inlineCode",{parentName:"p"},"firecracker")," and started ",(0,o.kt)("inlineCode",{parentName:"p"},"containerd"),", you can start\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"flintlockd")," service."),(0,o.kt)("p",null,"You can either download a ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/liquidmetal-dev/flintlock/releases"},"release"),", or build locally:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"go mod download\nmake build\n")),(0,o.kt)("p",null,"Flintlock will create MicroVMs with interfaces tapped to a parent on the host.\nIf you have a wired connection (and you did not set up a bridge earlier), this will\nbe the ethernet interface. If you are on a wireless connection (and you did need to\ncreate a bridge) this will be your wireless interface."),(0,o.kt)("p",null,"If you only have the one interface, this command will find it for you:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"NET_DEVICE=$(ip route show | awk '/default/ {print $5}')\n")),(0,o.kt)("p",null,"If you have both, you can use the above command (less the ",(0,o.kt)("inlineCode",{parentName:"p"},"print")," bit) or ",(0,o.kt)("inlineCode",{parentName:"p"},"ip link show"),",\n",(0,o.kt)("inlineCode",{parentName:"p"},"nmcli con show"),", etc, and do it by eye."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"NET_DEVICE=<your parent interface name>\n")),(0,o.kt)("p",null,"Lastly we start ",(0,o.kt)("inlineCode",{parentName:"p"},"flintlockd")," with the address to our ",(0,o.kt)("inlineCode",{parentName:"p"},"containerd"),", and the ",(0,o.kt)("inlineCode",{parentName:"p"},"parent-iface"),"\nname:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'sudo ./bin/flintlockd run \\\n  --containerd-socket=/run/containerd-dev/containerd.sock \\\n  --parent-iface="${NET_DEVICE}" \\\n  --insecure\n')),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"If you're running ",(0,o.kt)("inlineCode",{parentName:"p"},"flintlockd")," from within a Vagrant VM and wish to call the\ngRPC API from your host machine then you need to run ",(0,o.kt)("inlineCode",{parentName:"p"},"flintlockd")," with the\n",(0,o.kt)("inlineCode",{parentName:"p"},"--grpc-endpoint=0.0.0.0:9090")," flag, otherwise the connection will be rejected.")),(0,o.kt)("p",null,"You should see it start successfully with similar output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"INFO[0000] flintlockd, version=undefined, built_on=undefined, commit=undefined\nINFO[0000] flintlockd grpc api server starting\nINFO[0000] starting microvm controller\nINFO[0000] starting microvm controller with 1 workers    controller=microvm\nINFO[0000] resyncing microvm specs                       controller=microvm\nINFO[0000] Resyncing specs                               action=resync controller=microvm namespace=ns\nWARN[0000] basic authentication is DISABLED\nWARN[0000] TLS is DISABLED\nINFO[0000] starting event listener                       controller=microvm\nINFO[0000] Starting workersnum_workers1                  controller=microvm\n")))}d.isMDXComponent=!0},3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(n),f=o,m=p["".concat(c,".").concat(f)]||p[f]||d[f]||i;return n?r.createElement(m,a(a({ref:t},u),{},{components:n})):r.createElement(m,a({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);