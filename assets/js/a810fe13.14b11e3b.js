"use strict";(self.webpackChunkuserdocs=self.webpackChunkuserdocs||[]).push([[793],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),h=s(n),m=i,d=h["".concat(c,".").concat(m)]||h[m]||u[m]||o;return n?r.createElement(d,a(a({ref:t},p),{},{components:n})):r.createElement(d,a({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=h;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},9491:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u}});var r=n(3117),i=n(102),o=(n(7294),n(3905)),a=["components"],l={sidebar_position:5},c="Interacting with the service",s={unversionedId:"getting-started/basics/interacting-with-the-service",id:"getting-started/basics/interacting-with-the-service",title:"Interacting with the service",description:"We recommend using one of the following tools to send requests to the Flintlock server.",source:"@site/docs/getting-started/basics/interacting-with-the-service.md",sourceDirName:"getting-started/basics",slug:"/getting-started/basics/interacting-with-the-service",permalink:"/docs/getting-started/basics/interacting-with-the-service",editUrl:"https://github.com/weaveworks/flintlock/edit/main/userdocs/docs/getting-started/basics/interacting-with-the-service.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"gettingStartedSidebar",previous:{title:"Set up and start flintlock",permalink:"/docs/getting-started/basics/set-up-and-start-flintlock"},next:{title:"Container Image Creation for MicroVM usage",permalink:"/docs/getting-started/extras/image-creation"}},p={},u=[{value:"grpc-client-cli",id:"grpc-client-cli",level:2},{value:"Example",id:"example",level:3},{value:"BloomRPC",id:"bloomrpc",level:2},{value:"Import",id:"import",level:3},{value:"Example",id:"example-1",level:3}],h={toc:u};function m(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"interacting-with-the-service"},"Interacting with the service"),(0,o.kt)("p",null,"We recommend using one of the following tools to send requests to the Flintlock server.\nThere are both GUI and a CLI option."),(0,o.kt)("h2",{id:"grpc-client-cli"},"grpc-client-cli"),(0,o.kt)("p",null,"Install ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/fullstorydev/grpcurl"},"grpcurl"),"."),(0,o.kt)("p",null,"Use the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/weaveworks/flintlock/blob/main/hack/scripts/send.sh"},(0,o.kt)("inlineCode",{parentName:"a"},"./hack/scripts/send.sh"))," script."),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("p",null,"To created a MicroVM:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"./hack/scripts/send.sh \\\n  --method CreateMicroVM\n")),(0,o.kt)("p",null,"In the terminal where you started the Flintlock server (flintlockd), you should see in the logs that the MircoVM\nhas started."),(0,o.kt)("h2",{id:"bloomrpc"},"BloomRPC"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/uw-labs/bloomrpc"},"BloomRPC")," is a GUI tool to test gRPC endpoints."),(0,o.kt)("h3",{id:"import"},"Import"),(0,o.kt)("p",null,"To import Flintlock protos into the Bloom GUI:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Click ",(0,o.kt)("inlineCode",{parentName:"li"},"Import Paths")," on the left-hand menu bar and add ",(0,o.kt)("inlineCode",{parentName:"li"},"<absolute-repo-path>/api")," to the list"),(0,o.kt)("li",{parentName:"ol"},"Click the import ",(0,o.kt)("inlineCode",{parentName:"li"},"+")," button and select ",(0,o.kt)("inlineCode",{parentName:"li"},"flintlock/api/services/microvm/v1alpha1/microvms.proto"))),(0,o.kt)("p",null,"All available endpoints will be visible in a nice tree view."),(0,o.kt)("h3",{id:"example-1"},"Example"),(0,o.kt)("p",null,"To create a MircoVM, select the ",(0,o.kt)("inlineCode",{parentName:"p"},"CreateMicroVM")," endpoint in the left-hand menu.\nReplace the sample request JSON in the left editor panel with ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/weaveworks/flintlock/blob/main/hack/scripts/payload/CreateMicroVM.json"},"this\nexample"),".  Click the green ",(0,o.kt)("inlineCode",{parentName:"p"},">")," in the centre of the\nscreen. The response should come immediately."),(0,o.kt)("p",null,"In the terminal where you started the Flintlock server, you should see in the\nlogs that the MircoVM has started."),(0,o.kt)("p",null,"To delete the MircoVM, select the ",(0,o.kt)("inlineCode",{parentName:"p"},"DeleteMicroVM")," endpoint in the left-hand\nmenu.  Replace the sample request JSON in the left editor panel with ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/weaveworks/flintlock/blob/main/hack/scripts/payload/DeleteMicroVM.json"},"this\nexample"),".  Take care to ensure the values match those\nof the MicroVM you created earlier.  Click the green ",(0,o.kt)("inlineCode",{parentName:"p"},">")," in the centre of the\nscreen. The response should come immediately."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note: there are example payloads for other endpoints, but not all are\nimplemented at present.")))}m.isMDXComponent=!0}}]);