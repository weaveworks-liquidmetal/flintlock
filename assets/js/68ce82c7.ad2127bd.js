"use strict";(self.webpackChunkuserdocs=self.webpackChunkuserdocs||[]).push([[618],{4679:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return i},default:function(){return p},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return c}});var r=t(3117),a=(t(7294),t(3905));const o={title:"Containerd"},i=void 0,l={unversionedId:"getting-started/containerd",id:"getting-started/containerd",title:"Containerd",description:"Flintlock uses containerd to pull and snapshot OS and kernel images, as well as",source:"@site/docs/getting-started/containerd.md",sourceDirName:"getting-started",slug:"/getting-started/containerd",permalink:"/docs/getting-started/containerd",draft:!1,editUrl:"https://github.com/liquidmetal-dev/flintlock/edit/main/userdocs/docs/getting-started/containerd.md",tags:[],version:"current",frontMatter:{title:"Containerd"},sidebar:"gettingStartedSidebar",previous:{title:"Configure the network",permalink:"/docs/getting-started/network"},next:{title:"Firecracker",permalink:"/docs/getting-started/firecracker"}},s={},c=[{value:"Devmapper",id:"devmapper",level:2},{value:"Containerd",id:"containerd",level:2},{value:"Configure",id:"configure",level:3},{value:"Start",id:"start",level:2}],d={toc:c};function p(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Flintlock uses containerd to pull and snapshot OS and kernel images, as well as\nto store MicroVM metadata."),(0,a.kt)("h2",{id:"devmapper"},"Devmapper"),(0,a.kt)("p",null,"Flintlock relies on containerd's devicemapper snapshotter to provide filesystem\ndevices for Firecracker MicroVMs. Some configuration is required."),(0,a.kt)("p",null,"Flintlock supplies a general tool for provisioning hosts."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt update\nsudo apt install -y dmsetup bc\n\nsudo ./hack/scripts/provision.sh devpool\n")),(0,a.kt)("p",null,"Verify with ",(0,a.kt)("inlineCode",{parentName:"p"},"sudo dmsetup ls"),"."),(0,a.kt)("h2",{id:"containerd"},"Containerd"),(0,a.kt)("h3",{id:"configure"},"Configure"),(0,a.kt)("p",null,"It is likely that you will already have ",(0,a.kt)("inlineCode",{parentName:"p"},"containerd")," running somewhere: it is\nused by Docker."),(0,a.kt)("p",null,'For "tidiness" we will run a separate containerd process. The two will not interfere.'),(0,a.kt)("p",null,"Write a new containerd configuration file.\nSave this config to ",(0,a.kt)("inlineCode",{parentName:"p"},"/etc/containerd/config-dev.toml"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'cat << EOF >/etc/containerd/config-dev.toml\nversion = 2\n\nroot = "/var/lib/containerd-dev"\nstate = "/run/containerd-dev"\n\n[grpc]\n  address = "/run/containerd-dev/containerd.sock"\n\n[metrics]\n  address = "127.0.0.1:1338"\n\n[plugins]\n  [plugins."io.containerd.snapshotter.v1.devmapper"]\n    pool_name = "flintlock-dev-thinpool"\n    root_path = "/var/lib/containerd-dev/snapshotter/devmapper"\n    base_image_size = "10GB"\n    discard_blocks = true\n\n[debug]\n  level = "trace"\nEOF\n')),(0,a.kt)("p",null,"Create all the state and run directories:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo mkdir -p /var/lib/containerd-dev/snapshotter/devmapper\nsudo mkdir -p /run/containerd-dev/\n")),(0,a.kt)("h2",{id:"start"},"Start"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/containerd/containerd/releases"},"Install ContainerD"),"."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"RunC is not required; Flintlock uses various containerd services only.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo containerd --config /etc/containerd/config-dev.toml\n")),(0,a.kt)("p",null,"Containerd will log about 100 lines at boot, most will be about loading plugins, and we recommended\nscrolling up to ensure that the devmapper plugin loaded successfully."),(0,a.kt)("p",null,"Towards the end you should see something like ",(0,a.kt)("inlineCode",{parentName:"p"},"containerd successfully booted in 0.055357s"),"."),(0,a.kt)("p",null,"To reach our new dev containerd, we have to specify the ",(0,a.kt)("inlineCode",{parentName:"p"},"--address")," flag,\nfor example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ctr \\\n    --address=/run/containerd-dev/containerd.sock \\\n    --namespace=flintlock \\\n    content ls\n")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"To make it easier, save the command to an alias:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'alias ctr-dev="sudo ctr --address=/run/containerd-dev/containerd.sock"\n'))),(0,a.kt)("p",null,"You can either background the ",(0,a.kt)("inlineCode",{parentName:"p"},"containerd")," process or open another shell window."))}p.isMDXComponent=!0},3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(t),m=a,f=u["".concat(s,".").concat(m)]||u[m]||p[m]||o;return t?r.createElement(f,i(i({ref:n},d),{},{components:t})):r.createElement(f,i({ref:n},d))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);