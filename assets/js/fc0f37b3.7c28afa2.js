"use strict";(self.webpackChunkuserdocs=self.webpackChunkuserdocs||[]).push([[35],{3905:function(t,e,n){n.d(e,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function c(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var s=r.createContext({}),l=function(t){var e=r.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},u=function(t){var e=l(t.components);return r.createElement(s.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,i=t.originalType,s=t.parentName,u=c(t,["components","mdxType","originalType","parentName"]),d=l(n),f=o,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||i;return n?r.createElement(m,a(a({ref:e},u),{},{components:n})):r.createElement(m,a({ref:e},u))}));function f(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var i=n.length,a=new Array(i);a[0]=d;var c={};for(var s in e)hasOwnProperty.call(e,s)&&(c[s]=e[s]);c.originalType=t,c.mdxType="string"==typeof t?t:o,a[1]=c;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5748:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],c={sidebar_position:4},s="Set up and start flintlock",l={unversionedId:"getting-started/basics/set-up-and-start-flintlock",id:"getting-started/basics/set-up-and-start-flintlock",title:"Set up and start flintlock",description:"If you're running flintlockd from within a Vagrant VM and wish to call the gRPC API from your host machine then you need to run flintlockd with the --grpc-endpoint=0.0.0.0:9090 flag, otherwise the connection will be rejected.",source:"@site/docs/getting-started/basics/set-up-and-start-flintlock.md",sourceDirName:"getting-started/basics",slug:"/getting-started/basics/set-up-and-start-flintlock",permalink:"/docs/getting-started/basics/set-up-and-start-flintlock",editUrl:"https://github.com/weaveworks/flintlock/edit/main/userdocs/docs/getting-started/basics/set-up-and-start-flintlock.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"gettingStartedSidebar",previous:{title:"Set up Firecracker",permalink:"/docs/getting-started/basics/set-up-firecracker"},next:{title:"Interacting with the service",permalink:"/docs/getting-started/basics/interacting-with-the-service"}},u=[],p={toc:u};function d(t){var e=t.components,n=(0,o.Z)(t,a);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"set-up-and-start-flintlock"},"Set up and start flintlock"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"go mod download\nmake build\n\nNET_DEVICE=$(ip route show | awk '/default/ {print $5}')\n\nsudo ./bin/flintlockd run \\\n  --containerd-socket=/run/containerd-dev/containerd.sock \\\n  --parent-iface=\"${NET_DEVICE}\"\n")),(0,i.kt)("p",null,"If you're running ",(0,i.kt)("inlineCode",{parentName:"p"},"flintlockd")," from within a Vagrant VM and wish to call the gRPC API from your host machine then you need to run ",(0,i.kt)("inlineCode",{parentName:"p"},"flintlockd")," with the ",(0,i.kt)("inlineCode",{parentName:"p"},"--grpc-endpoint=0.0.0.0:9090")," flag, otherwise the connection will be rejected."),(0,i.kt)("p",null,"You should see it start successfully with similar output:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"INFO[0000] flintlockd, version=undefined, built_on=undefined, commit=undefined\nINFO[0000] flintlockd grpc api server starting\nINFO[0000] starting microvm controller\nINFO[0000] starting microvm controller with 1 workers    controller=microvm\nINFO[0000] resyncing microvm specs                       controller=microvm\nINFO[0000] Resyncing specs                               action=resync controller=microvm namespace=ns\nINFO[0000] starting event listener                       controller=microvm\nINFO[0000] Starting workersnum_workers1                  controller=microvm\n")))}d.isMDXComponent=!0}}]);